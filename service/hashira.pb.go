// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hashira.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	hashira.proto

It has these top-level messages:
	Task
	CommandCreate
	CommandUpdate
	CommandDelete
	CommandRetrieve
	ResultCreate
	ResultUpdate
	ResultDelete
	ResultRetrieve
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Place int32

const (
	Place_BACKLOG Place = 0
	Place_TODO    Place = 1
	Place_DOING   Place = 2
	Place_DONE    Place = 3
)

var Place_name = map[int32]string{
	0: "BACKLOG",
	1: "TODO",
	2: "DOING",
	3: "DONE",
}
var Place_value = map[string]int32{
	"BACKLOG": 0,
	"TODO":    1,
	"DOING":   2,
	"DONE":    3,
}

func (x Place) String() string {
	return proto.EnumName(Place_name, int32(x))
}
func (Place) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Task struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Place     Place  `protobuf:"varint,3,opt,name=place,enum=service.Place" json:"place,omitempty"`
	IsDeleted bool   `protobuf:"varint,4,opt,name=isDeleted" json:"isDeleted,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetPlace() Place {
	if m != nil {
		return m.Place
	}
	return Place_BACKLOG
}

func (m *Task) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

type CommandCreate struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Place Place  `protobuf:"varint,2,opt,name=place,enum=service.Place" json:"place,omitempty"`
}

func (m *CommandCreate) Reset()                    { *m = CommandCreate{} }
func (m *CommandCreate) String() string            { return proto.CompactTextString(m) }
func (*CommandCreate) ProtoMessage()               {}
func (*CommandCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommandCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CommandCreate) GetPlace() Place {
	if m != nil {
		return m.Place
	}
	return Place_BACKLOG
}

type CommandUpdate struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Place Place  `protobuf:"varint,2,opt,name=place,enum=service.Place" json:"place,omitempty"`
}

func (m *CommandUpdate) Reset()                    { *m = CommandUpdate{} }
func (m *CommandUpdate) String() string            { return proto.CompactTextString(m) }
func (*CommandUpdate) ProtoMessage()               {}
func (*CommandUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CommandUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommandUpdate) GetPlace() Place {
	if m != nil {
		return m.Place
	}
	return Place_BACKLOG
}

type CommandDelete struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CommandDelete) Reset()                    { *m = CommandDelete{} }
func (m *CommandDelete) String() string            { return proto.CompactTextString(m) }
func (*CommandDelete) ProtoMessage()               {}
func (*CommandDelete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommandDelete) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CommandRetrieve struct {
}

func (m *CommandRetrieve) Reset()                    { *m = CommandRetrieve{} }
func (m *CommandRetrieve) String() string            { return proto.CompactTextString(m) }
func (*CommandRetrieve) ProtoMessage()               {}
func (*CommandRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ResultCreate struct {
	Task *Task `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
}

func (m *ResultCreate) Reset()                    { *m = ResultCreate{} }
func (m *ResultCreate) String() string            { return proto.CompactTextString(m) }
func (*ResultCreate) ProtoMessage()               {}
func (*ResultCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResultCreate) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type ResultUpdate struct {
	Task *Task `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
}

func (m *ResultUpdate) Reset()                    { *m = ResultUpdate{} }
func (m *ResultUpdate) String() string            { return proto.CompactTextString(m) }
func (*ResultUpdate) ProtoMessage()               {}
func (*ResultUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ResultUpdate) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type ResultDelete struct {
	Task *Task `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
}

func (m *ResultDelete) Reset()                    { *m = ResultDelete{} }
func (m *ResultDelete) String() string            { return proto.CompactTextString(m) }
func (*ResultDelete) ProtoMessage()               {}
func (*ResultDelete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ResultDelete) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type ResultRetrieve struct {
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *ResultRetrieve) Reset()                    { *m = ResultRetrieve{} }
func (m *ResultRetrieve) String() string            { return proto.CompactTextString(m) }
func (*ResultRetrieve) ProtoMessage()               {}
func (*ResultRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ResultRetrieve) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "service.Task")
	proto.RegisterType((*CommandCreate)(nil), "service.CommandCreate")
	proto.RegisterType((*CommandUpdate)(nil), "service.CommandUpdate")
	proto.RegisterType((*CommandDelete)(nil), "service.CommandDelete")
	proto.RegisterType((*CommandRetrieve)(nil), "service.CommandRetrieve")
	proto.RegisterType((*ResultCreate)(nil), "service.ResultCreate")
	proto.RegisterType((*ResultUpdate)(nil), "service.ResultUpdate")
	proto.RegisterType((*ResultDelete)(nil), "service.ResultDelete")
	proto.RegisterType((*ResultRetrieve)(nil), "service.ResultRetrieve")
	proto.RegisterEnum("service.Place", Place_name, Place_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Hashira service

type HashiraClient interface {
	Create(ctx context.Context, in *CommandCreate, opts ...grpc.CallOption) (*ResultCreate, error)
	Update(ctx context.Context, in *CommandUpdate, opts ...grpc.CallOption) (*ResultUpdate, error)
	Delete(ctx context.Context, in *CommandDelete, opts ...grpc.CallOption) (*ResultDelete, error)
	Retrieve(ctx context.Context, in *CommandRetrieve, opts ...grpc.CallOption) (*ResultRetrieve, error)
}

type hashiraClient struct {
	cc *grpc.ClientConn
}

func NewHashiraClient(cc *grpc.ClientConn) HashiraClient {
	return &hashiraClient{cc}
}

func (c *hashiraClient) Create(ctx context.Context, in *CommandCreate, opts ...grpc.CallOption) (*ResultCreate, error) {
	out := new(ResultCreate)
	err := grpc.Invoke(ctx, "/service.Hashira/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hashiraClient) Update(ctx context.Context, in *CommandUpdate, opts ...grpc.CallOption) (*ResultUpdate, error) {
	out := new(ResultUpdate)
	err := grpc.Invoke(ctx, "/service.Hashira/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hashiraClient) Delete(ctx context.Context, in *CommandDelete, opts ...grpc.CallOption) (*ResultDelete, error) {
	out := new(ResultDelete)
	err := grpc.Invoke(ctx, "/service.Hashira/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hashiraClient) Retrieve(ctx context.Context, in *CommandRetrieve, opts ...grpc.CallOption) (*ResultRetrieve, error) {
	out := new(ResultRetrieve)
	err := grpc.Invoke(ctx, "/service.Hashira/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Hashira service

type HashiraServer interface {
	Create(context.Context, *CommandCreate) (*ResultCreate, error)
	Update(context.Context, *CommandUpdate) (*ResultUpdate, error)
	Delete(context.Context, *CommandDelete) (*ResultDelete, error)
	Retrieve(context.Context, *CommandRetrieve) (*ResultRetrieve, error)
}

func RegisterHashiraServer(s *grpc.Server, srv HashiraServer) {
	s.RegisterService(&_Hashira_serviceDesc, srv)
}

func _Hashira_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HashiraServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Hashira/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HashiraServer).Create(ctx, req.(*CommandCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hashira_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HashiraServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Hashira/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HashiraServer).Update(ctx, req.(*CommandUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hashira_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HashiraServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Hashira/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HashiraServer).Delete(ctx, req.(*CommandDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hashira_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRetrieve)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HashiraServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Hashira/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HashiraServer).Retrieve(ctx, req.(*CommandRetrieve))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hashira_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Hashira",
	HandlerType: (*HashiraServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Hashira_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Hashira_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Hashira_Delete_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Hashira_Retrieve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hashira.proto",
}

func init() { proto.RegisterFile("hashira.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x9b, 0xae, 0xdd, 0x9f, 0x3b, 0x57, 0x6b, 0x40, 0x2d, 0x43, 0xb0, 0x46, 0x1f, 0x86,
	0x0f, 0x03, 0x37, 0x7c, 0xf0, 0x49, 0x74, 0x1d, 0x73, 0x28, 0xab, 0x94, 0xf9, 0x01, 0xe2, 0x1a,
	0x58, 0xd9, 0x5f, 0x9a, 0xba, 0x2f, 0xef, 0x8b, 0xb4, 0xc9, 0x32, 0x6d, 0x45, 0xe6, 0x5b, 0x39,
	0xb7, 0xbf, 0x73, 0x6e, 0x4e, 0x53, 0x68, 0x4c, 0x29, 0x9f, 0x46, 0x31, 0x6d, 0xaf, 0xe3, 0x55,
	0xb2, 0xc2, 0x15, 0xce, 0xe2, 0x4d, 0x34, 0x61, 0x64, 0x09, 0xc6, 0x98, 0xf2, 0x19, 0xb6, 0x40,
	0x8f, 0x42, 0x07, 0xb9, 0xa8, 0x55, 0x0b, 0xf4, 0x28, 0xc4, 0x18, 0x8c, 0x25, 0x5d, 0x30, 0x47,
	0xcf, 0x94, 0xec, 0x19, 0x5f, 0x81, 0xb9, 0x9e, 0xd3, 0x09, 0x73, 0x4a, 0x2e, 0x6a, 0x59, 0x1d,
	0xab, 0x2d, 0x4d, 0xda, 0xaf, 0xa9, 0x1a, 0x88, 0x21, 0x3e, 0x83, 0x5a, 0xc4, 0x3d, 0x36, 0x67,
	0x09, 0x0b, 0x1d, 0xc3, 0x45, 0xad, 0x6a, 0xb0, 0x13, 0xc8, 0x10, 0x1a, 0xbd, 0xd5, 0x62, 0x41,
	0x97, 0x61, 0x2f, 0x66, 0x34, 0x61, 0x2a, 0x08, 0xfd, 0x16, 0xa4, 0xff, 0x11, 0x44, 0xfa, 0xca,
	0xea, 0x6d, 0x1d, 0xa6, 0x56, 0xf9, 0x33, 0xec, 0x67, 0x73, 0xae, 0x6c, 0xc4, 0x8e, 0x79, 0x1b,
	0x72, 0x04, 0x87, 0xf2, 0x85, 0x80, 0x25, 0x71, 0xc4, 0x36, 0x8c, 0xdc, 0xc0, 0x41, 0xc0, 0xf8,
	0xc7, 0x3c, 0x91, 0x87, 0xb8, 0x00, 0x23, 0xa1, 0x7c, 0x96, 0x41, 0xf5, 0x4e, 0x43, 0x05, 0xa5,
	0xd5, 0x06, 0xd9, 0x68, 0x87, 0xc8, 0x65, 0xff, 0x83, 0xc8, 0xc5, 0xf6, 0x40, 0x6e, 0xc1, 0x12,
	0xc8, 0x76, 0x55, 0x7c, 0x09, 0x66, 0x3a, 0xe1, 0x0e, 0x72, 0x4b, 0x45, 0x4a, 0xcc, 0xae, 0xbb,
	0x60, 0x66, 0x9d, 0xe0, 0x3a, 0x54, 0x1e, 0x1f, 0x7a, 0xcf, 0x2f, 0xfe, 0xc0, 0xd6, 0x70, 0x15,
	0x8c, 0xb1, 0xef, 0xf9, 0x36, 0xc2, 0x35, 0x30, 0x3d, 0x7f, 0x38, 0x1a, 0xd8, 0x7a, 0x2a, 0x7a,
	0xfe, 0xa8, 0x6f, 0x97, 0x3a, 0x9f, 0x08, 0x2a, 0x4f, 0xe2, 0x56, 0xe1, 0x3b, 0x28, 0xcb, 0x2a,
	0x4e, 0x54, 0xc0, 0x8f, 0xef, 0xdc, 0x3c, 0x56, 0xfa, 0xf7, 0xe6, 0x88, 0x96, 0xa2, 0xb2, 0x92,
	0x02, 0x2a, 0xf4, 0x02, 0x2a, 0x64, 0x81, 0xca, 0x6a, 0x0a, 0xa8, 0xd0, 0x0b, 0xa8, 0x90, 0x89,
	0x86, 0xef, 0xa1, 0xaa, 0x2a, 0x72, 0xf2, 0xf0, 0x76, 0xd2, 0x3c, 0xcd, 0xe1, 0xea, 0x02, 0x68,
	0xef, 0xe5, 0xec, 0x47, 0xea, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x96, 0x03, 0x52, 0x59,
	0x03, 0x00, 0x00,
}

syntax = "proto3";

option go_package = "github.com/pankona/hashira/service";

package service;

service Hashira {
    rpc Create(CommandCreate) returns (ResultCreate) {}
    rpc Update(CommandUpdate) returns (ResultUpdate) {}
    rpc Delete(CommandDelete) returns (ResultDelete) {}
    rpc PhysicalDelete(CommandPhysicalDelete) returns (ResultPhysicalDelete) {}
    rpc Retrieve(CommandRetrieve) returns (ResultRetrieve) {}
    rpc UpdatePriority(CommandUpdatePriority) returns (ResultUpdatePriority) {}
    rpc RetrievePriority(CommandRetrievePriority) returns (ResultRetrievePriority) {}
}

enum Place {
    BACKLOG = 0;
    TODO    = 1;
    DOING   = 2;
    DONE    = 3;
}

message Task {
    string id        = 1;
    string name      = 2;
    Place  place     = 3;
    bool   isDeleted = 4;
    bool   isDirty   = 5;
}

message Priority {
    repeated string ids = 1;
    bool            isDirty = 2;
}

message CommandCreate {
    Task task = 1;
}

message CommandUpdate {
    Task task = 1;
}

message CommandDelete {
    string id = 1;
}

message CommandPhysicalDelete {
    string id = 1;
}

message CommandRetrieve {
    bool excludeDeleted = 1;
}

message CommandUpdatePriority {
    map<string, Priority> priorities = 1;
}

message CommandRetrievePriority {
}

message ResultCreate {
    Task task = 1;
}

message ResultUpdate {
    Task task = 1;
}

message ResultDelete {
    Task task = 1;
}

message ResultPhysicalDelete {
}

message ResultRetrieve {
    map<string, Task> tasks = 1;
}

message ResultUpdatePriority {
    map<string, Priority> priorities = 1;
}

message ResultRetrievePriority {
    map<string, Priority> priorities = 1;
}
